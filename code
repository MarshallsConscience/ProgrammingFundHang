
####### TASK 2 will finish validation later
### Task 2: 2.1, 2.2 complete

import random

def load_words(fileName): 
    try:
        with open(fileName, 'r') as wordFile:
            myWords = [line.strip() for line in wordFile]
            wordsPresent = len(myWords)
            wordFile.close()
            return wordsPresent,  myWords
        choose_secret_word()
    except FileNotFoundError:
        print("This file does not exist!")
        
def choose_secret_word():
    wordList = load_words("words.txt")[1]
    secretWord =  [random.choice(wordList)]
    return secretWord
    
print(choose_secret_word())

############### will try to finish 
did some of task 2,its saying lose_count+=1 is syntax error? 

def game_stats():
    if guesses >= 0 and is_secret_guessed == True:
        global win_count+=1
    elif guesses = 0 and is_secret_guessed == False:
        global lose_count+=1
    print("the total wins is: ",win_count,"you have won: ",(win_count/total_games,"%"))
    print("the total loss count is: ",lose_count, "you have lost: ",(lose_count/total_games),"%")

print(game_stats())
########### TASK 2 End 


########## TASK 1 
#Part 1 1,2 functions complete with test data


#2nd function  completed#
  #2nd function  completed#
list1=["a","b","c","e","h","o"]
word = "hello"
word = "hello"
word = "hello"

def is_secret_guessed(secret_word,letters_guessed):
    for letter in secret_word:
        if letter not in letters_guessed:
            return False
    return True 

def get_current_guess(secret_word,letters_guessed):
    for i in secret_word:
        if i not in letters_guessed:
            secret_word=secret_word.replace(i,"_")
    return secret_word


def first_game(secret_word):
    guesses_remaining = len(secret_word)
    guesses_remaining += 3
    list1 = []
    print("the secret word has ",len(secret_word)," characters")
    while guesses_remaining > 0:
        print("you have ",guesses_remaining," guesses left.")
        user_input= input()
        list1.append((user_input))
        if user_input == secret_word:
            print("you guessed correctly")
            return "you win"
            break
        guesses_remaining -=1 
        print(get_current_guess(secret_word,list1))
    if get_current_guess(secret_word,list1)== secret_word:
        return "you win"
    elif is_secret_guessed(secret_word,list1) == True:
        return "you win"
    else:
        return "you lose"
    

first_game(word)

