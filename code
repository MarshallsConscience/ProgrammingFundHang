
####### TASK 2 will finish validation later
### Task 2: 2.1, 2.2 complete

import random

def load_words(fileName): 
    try:
        with open(fileName, 'r') as wordFile:
            myWords = [line.strip() for line in wordFile]
            wordsPresent = len(myWords)
            wordFile.close()
            return wordsPresent,  myWords
        choose_secret_word()
    except FileNotFoundError:
        print("This file does not exist!")
        
def choose_secret_word():
    wordList = load_words("words.txt")[1]
    secretWord =  [random.choice(wordList)]
    return secretWord
    
print(choose_secret_word())

##########
did some of task 2,its saying lose_count+=1 is syntax error? 

def game_stats():
    if guesses >= 0 and is_secret_guessed == True:
        global win_count+=1
    elif guesses = 0 and is_secret_guessed == False:
        global lose_count+=1
    print("the total wins is: ",win_count,"you have won: ",(win_count/total_games,"%"))
    print("the total loss count is: ",lose_count, "you have lost: ",(lose_count/total_games),"%")

print(game_stats())
########### TASK 2 End 


########## TASK 1 
#Part 1 1,2 functions complete with test data


def first_game(secret_word):
    if is_secret_guessed != True:
        print("Welcome Player to the interactive hangman game:")
    x=(input("Do you want to play...Press y/n"))
    try:
        if x == "y":
            print("time to play")
        elif x == "n":
            print("looks like you dont want to play")
    except:
            print("not recognized")
    return "Take your first guess"
print(first_game("chicken"))

#2nd function  completed#

list1=["a","b","c","e"]
word = "hello"

def get_current_guess(secret_word,letters_guessed):
    
    for i in secret_word:
        if i not in letters_guessed:
            secret_word=secret_word.replace(i,"_")
    return secret_word
    
get_current_guess(word,list1)
                               
#this will check every letter in the word and if they are not there it will replace them with a _#
#the function below will check if all the letters have been correctly guessed
def is_secret_guessed(secret_word,letters_guessed):
    for letter in secret_word:
        if letter not in letters_guessed:
            return False
    return True    
        
print (is_secret_guessed(word,list1))

